//для редактирования настроек vim 
//использую команду vim ~/.vimrc

//содержимое моего vimrc
----------------------------------------------------
set number

set tabstop=4 expandtab

set langmap=ёйцукенгшщзхъфывапролджэячсмитьбюЁЙЦУКЕHГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮ;`qwertyuiop[]asdfghjkl\\;'zxcvbnm\\,.~QWERTYUIOP{}ASDFGHJKL:\\"ZXCVBNM<>

set autoindent
---------------------------------------------------------
== Отступы ==
[#]>                      сдвинуть выделенное вправо
[#]<                      сдвинуть выделенное влево
[#]>>                     сдвинуть строку вправо
[#]<<                     сдвинуть строку влево
set tabstop=#             для табуляции используется # пробелов
set shiftwidth=#          в командах отступа используется # пробелов
set [no]expandtab         заменять ли табуляцию на соответствующее
                            число пробелов
----------------------------------------------------------------------------

//автодополнение текста
//в режиме вставки
ctr+n/ctr+p

////работа с вкладками(несколько файлов)
------------------------------------------
//создание вкладки
:tabe <имя файла>
//переход по вкладкам
gt
//Выполнить команду во всех вкладках
:tabdo %s/foo/bar/g 

<n>gt                    перейти на таб #n
gt                       следующий таб
gT                       предыдущий таб
:tabm +1                 переместить таб вперед на одну позицию
:tabm -1                 переместить таб назад на одну позицию
:tabm 2                  переместить таб на заданную позицию
                           (нумерация начинается с нуля)

--------------------------------------
Способы перейти в режим вставки
----------------------------------------
    i - вставить текст слева от текущего
    I - вставить текст в начало строки
    a - вставить текст справа от текущего символа
    A - вставить текст в конец текущей строки
    o - создать новую строку под текущей
    O - создать новую строку над текущей
    C - заменить всё до конца строки
    r - заменить 1 символ
    3s - удалить 3 символа и перейти в режим вставки
    ciW - заменить большое слово под курсором
    ci" - заменить текст между кавычками
    ci( - заменить текст между круглыми скобками
    gi - перейти к последнему месту, где производилось редактирование
------------------------------------------------------------------------
Способы сложного выделения текста
--------------------------------------------------------------------------
    v% - когда курсор установлен на одной из скобок - выделит всё до её пары.
    vib - выделить всё между двумя ближайшими к курсору круглыми скобками
    viB - выделить всё между двумя ближайшими к курсору фигурными скобками
    vi" - выделить всё между двумя ближайшими двойными кавычками
    vi' - выделить всё между двумя ближайшими одинарными кавычками
    ggVG - выделить весь файл
    Ctrl+v - выделять прямоугольником

	
-------------------------------------------------------------------------
No buses
---------------------------------------------------------------------------
Передвижение по тексту
-----------------------------------------------------------------------------------
w - Передвинуть курсор вперед на одно слово
b - Передвинуть курсор назад на одно слово
0 - Передвинуть курсор на начало текущей строки
^ - Передвинуть курсор на первый символ в текущей строке
$ - Передвинуть курсор на конец текущей строки
* - начать поиск по слову под курсором
--------------------------------------------------------------------------------


-----------------------------------------------------------
////окна
--------------------------------------------
//создание окна
:new
//дублирование окна
:sp
//вертикальное дублирование
:vsp
//переход между окнами
ctr+w
hjkl
//перестановка окон
ctr+w
HJKL
//изменение ширины окна
ctr+w  < >

//копирование части текста
//пример
30,40co45


//замена текста
%s/<old>/<new>/g

//замена пробелов переводом строки
%s/ /^M/g
здесь ^M это комбинация клавиш ctrl + v далее ввод

//удаление пустых строк
g/^$/d 

^ — символ обозначающий в bash начало строки
$ — символ обозначающий конец строки
d — необходимое действие — удалить

Если используется решетка:
:g/^#/d


Изменить регистр символа под курсором на противоположный
~

вырезать(удалить) выделенный текст и поместить его в буфер обмена
d

скопировать (yank) помеченный текст в буфер обмена	
y

вырезать помеченный текст и поместить его в буфер обмена. Эта команда действует аналогично команде d, но оставляет редактор в режиме вставки	
c

	
перейти к линии которую вы редактировали последней
`.


Разбить окно и открыть встроенный файл менеджер
:Sex 

открыть файловый менеджер
:e.

работа с буферами

вывести список буферов
:buffers!

:windo %s/myPoorlyCapitalizedClass/MyPoorlyCapitalizedClass/g
хз как с этим обращаться

		

отмена отмен 
ctrl + r

комментирование нескольких строкъ

^v } I (нужный символ) <ESC>


-------------------------------------------------------------------
Пример: как сконвертировать файл из MS Windows cp1251 в Linux utf-8

    Открываем файл в Vim:

vim filename.txt

    Задаем текущую кодировку cp1251:

:e ++enc=cp1251

    Текст конвертируется и Vim отобразит изменения, если они произошли. Исходный файл не изменился.
    Задаем кодировку сохранения файла utf-8:

:set fileencoding=utf-8

    Задаем формат переводов строки (dos, unix или mac):

:set fileformat=unix

    Сохраняем файл.

:w

    Выходим

:q

----------------------------------------------------------------------------------
ctl + o
переход к последнему редактируемому файлу
---------------------------------------------------------------------------------
В vim можно сохранить сессию редактирования, т.е. закрыть редактор, а потом продолжить, как будто ничего и не закрывали.

Чтобы сохранить сессию :mks файлсессии

Чтобы восстановить: $ vim -S файлсессии

изменить уже созданный файлсессии :mks! lastSession.vim(фс)

source file.session       восстановить ранее сохраненную сессию
-------------------------------------------------------------------------------------------
==============================================================================================
 х з как этим пользоваться\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
===========================================================================================
Дополнение: можно включить автоматическое сохранение всех сессий, добавив в ~/.vimrc

autocmd VimLeavePre * silent mksession! ~/.vim/lastSession.vim


Можно включить и автоматическую загрузку последнее сохранённой сессии, добавив

autocmd VimEnter * silent source! ~/.vim/lastSession.vim
==========================================================================================
---------------------------------------------------------------------------


выключение "блокировки" vim при нажатии ^s -------> нужно выполнить команду ^q
при этом все что вы набирали после нажатия ^s отобразится в тексте или выполнится та команда которая была набрана в режиме "блокирования"
---------------------------------------------------------------------------------

при нажатии q далее <буква> в режиме просмотра 
появляется надпись запись @<буква>
теперь набираем любую команду 
например :w
далее жмем <буква>q
выполняется команда и сохраняется в регистре vim 
эту команду можно далее вызвать набрав в режиме просмотра
@<буква>
