Установка
============

устанавливаю из репозитория текущую версию postgreSQL 
sudo apt-get install postgresql postgresql-contrib

далее переключаюсь в сессию учетной записи postgres 
sudo su - postgres

запускаю psql
psql

для выхода из psql набираем(обязательно понадобится))) 
\q

С установкой всё
=========================================================

создаем супер юзера
	create user <username> with superuser password 'password'; 

этот пользователь понадобится для создания баз и пользователей
выходим \q
------------------------------------------------------------------


заходим под суперюзером
-------------------------------------------
включение psql и нужной нам базы данных и пользователя
$psql <наша бд> -h localhost -U <наш пользователь>

Создаём нового пользователя  
использую шаблон 
create user <username> with password 'password';

-------------------------------------------
Создаю новую базу данных используя шаблон

CREATE DATABASE test_database OWNER test_user;
здесь OWNER будет владельцем новой базы данных

--------------------------
ВЫХОДИМ
логинимся под новым пользователем 
не забываем указывать название бд
(далее работаем теперь под ним)



=========================================================

конфиги для настройки

/etc/postgresql/9.5/main$ less postgresql.conf 

в этом файле интересует
	порт
	адрес  - сервера
	количество подключенных пользователей


/etc/postgresql/9.5/main$ sudo  less pg_hba.conf

в этом файле настраиватеся какой пользователь 
с какого ip адреса может подключиться к такой-то базе данных

METHOD
	peer - означает какой пользователь в системе такой пользователь и в бд
	md5 - авторизация средствами postgresql
	reject - запрещение авторизации
		
на этапе обучения оставляем все настройки как есть


=========================================================

все можно работать








Чтобы создать пользователя воспользуйтесь командой

CREATE USER test_user WITH password 'qwerty';
CREATE ROLE name [ [ WITH ] option [ ... ] ]

создание суперюзераown	
create user super with superuser password 'qaLd0ne!*';

Команда CREATE USER отличается только тем, что автоматически даёт роли привилегии входа.
------------------------------------------------------------------------------

Чтобы создать базу с владельцем добавьте опциональный параметр OWNER

CREATE DATABASE test_database OWNER test_user;

Можно также дать права на базу пользователю командой

GRANT ALL privileges ON DATABASE test_db TO test_user; 

пример
	GRANT SELECT, INSERT ON customer TO GROUP authors;
привилегии отменяются командой REVOKE



--------------------------------------------------------------------------------------

Для добавления пользователя в группу используется команда ALTER GROUP. Синтаксис команды:

    ALTER GROUP groupname ADD USER username [, ... ]

Для удаления пользователя из группы:

    ALTER GROUP groupname DROP USER username [, ... ]

Для переименования группы: ALTER GROUP groupname RENAME TO newname

--------------------------------------------------------------------------------------

В интерактивном режиме переход в другую базу данных

\c app_db shop localhost 5432;

--------------------------------------------------------------------------------------

включение psql и нужной нам базы данных и пользователя
$psql postgres -h localhost -U super

c ключем -f используем файл скрипта например up_000_001.sql
---------------------------------------------------------------------------------------

Команды запуска psql

    psql -c (или –command) – запуск команды без входа в интерактивный режим
    -f (или –file) – также как и -c , но команда читается с файла
    -l (или –list) – выводит список баз данных, к которым можно подключиться 
        (если появляется ошибка: psql: FATAL: role “_your_userName_” does not exist ),
         то значит нужно указать имя пользователя явно.
    -U (или –username) – указываем имя пользователя (например postgres)
    -W (или –password) – приглашение на ввод пароля
    -d – имя базы данных
    -h – имя хоста (сервера)
    -s – пошаговый режим, то есть, нужно будет подтверждать все команды
    –S – одно-строчный режим, то есть, переход на новую строку будет выполнять запрос 
          (когда надоело вводить “;” после каждой SQL команды! )
    -V – (не строчная v) – версия PostgreSQL без входа в интерактивный режим
----------------------------------------------------------------------------------

запуск внешней команды
\! <команда> (\! pwd|cd|ls)

список всех таблиц базы данных ?
\dt
или из терминала
psql –d <name_dbase>
-------------------------------------

выполнить команды из файла
применение файла миграции
\i <имяфайла>

или из терминала
$psql postgres -h localhost -U super
c ключем -f используем файл скрипта например up_000_001.sql
-----------------------------------------------------------

посмотреть список всех бд
postgres#\l
------------------------------------------

сбросить буфер (отменить ввод)
=>\r 
----------------------------------------------------------

вывести список всех типов
\dT - 
----------------------------------------------------------

выход из psql
\q 
----------------------------------------------------------- 

описание таблицы
\d <table_name>
-------------------------------------------------------------


клонирование базы данных

Для копирования достаточно указать существующую в качестве шаблона.
	
$ createdb -T app_db app_db_backup
.
. (работаем успешно всё ломаем)
.
Для восстановления удалим существующую и склонируем обратно.
$ dropdb app_db
$ createdb -T app_db_backup app_db
--------------------------------------------------------------------
